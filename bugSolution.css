There are several ways to solve this issue, depending on the desired layout:

**1. Using absolute units:** Replace percentage values with absolute units (pixels, ems, rems) for a consistent width regardless of the parent's size.

```css
.container {
  width: 50%;
}

.inner {
  width: calc(300px - 20px); /*Example*/
}
```

**2.  Using viewport units (vw, vh):** If the width should be relative to the viewport, use viewport units instead of percentages:

```css
.container {
  width: 50vw;
}

.inner {
  width: calc(100vw - 20px);
}
```

**3.  Adjusting parent element width:** If possible, modify the parent element's width to use absolute units or viewport units to ensure consistent behavior within `calc()`.

**4. Using JavaScript:**  In complex situations, JavaScript may be needed to dynamically calculate the width based on the parent container's size. This offers more flexibility but adds complexity.  This approach should be considered if CSS solutions are insufficient or prove too cumbersome.

Choose the solution that best fits your specific layout and requirements.  The solutions presented illustrate common workarounds for issues with `calc()` in nested contexts.